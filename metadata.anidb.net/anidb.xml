<?xml version="1.0" encoding="utf-8"?>
<scraper framework="1.1" date="2011-04-18">

  <NfoUrl dest="3">         
    <RegExp input="$$1" output="&lt;url gzip=&quot;yes&quot; cache=&quot;\1.xml&quot;&gt;http://api.anidb.net:9001/httpapi?request=anime&amp;client=xbmcscrap&amp;clientver=1&amp;protover=1&amp;aid=\1&lt;/url&gt;" dest="3">
      <expression>aid=(\d+)</expression>
    </RegExp>
  </NfoUrl>
  
  <CreateSearchUrl clearbuffers="no" dest="4">  
    <RegExp conditional="Google" input="$$4" output="&lt;url gzip=&quot;yes&quot;&gt;https://www.google.com/search?q=site:anidb.net\1&amp;filter=0&lt;/url&gt;" dest="4">
      <RegExp input="$$1" output="+\1" dest="4">
        <expression clear="yes" repeat="yes">(?i)(?:%[a-f0-9]{2})*([a-z0-9]+)?</expression>
      </RegExp>
      <expression clear="yes" noclean="1"/>
    </RegExp> 
    <RegExp conditional="!Google" input="$$1" output="&lt;url gzip=&quot;yes&quot; cache=&quot;anidb.xml&quot;&gt;$INFO[AnimeListUrl]&lt;/url&gt;" dest="4">
      <RegExp input="$$1" output="\1" dest="18">
        <expression clear="yes"/>
      </RegExp>
      <expression clear="yes"/>
    </RegExp>
    <RegExp input="" output="" dest="1">
      <expression clear="yes"/>
    </RegExp>
  </CreateSearchUrl>
  
  <GetSearchResults clearbuffers="no" dest="4">
    <RegExp input="$$4" output="&lt;results&gt;\1&lt;/results&gt;" dest="4">
      <RegExp conditional="Google" input="$$4" output="\1" dest="4">
        <RegExp conditional="Google" input="$$1" output="&lt;url function=&quot;GetSearchResultsExt&quot; gzip=&quot;yes&quot; cache=&quot;\1.xml&quot;&gt;http://api.anidb.net:9001/httpapi?request=anime&amp;client=xbmcscrap&amp;clientver=1&amp;protover=1&amp;aid=\1&lt;/url&gt;" dest="4">
          <expression clear="yes" repeat="yes">(?i)&lt;a href=&quot;https://anidb\.net/perl-bin/animedb\.pl\?show=anime&amp;amp;aid=(\d+)&quot;</expression>
        </RegExp>
        <RegExp conditional="Google" input="$$1" output="&lt;url function=&quot;GetSearchResultsExt&quot; gzip=&quot;yes&quot; cache=&quot;\1.xml&quot;&gt;http://api.anidb.net:9001/httpapi?request=anime&amp;client=xbmcscrap&amp;clientver=1&amp;protover=1&amp;aid=\1&lt;/url&gt;" dest="4+">
          <expression repeat="yes">(?i)&lt;a href=&quot;https://anidb\.net/a(\d+)&quot;</expression>
        </RegExp>
        <expression noclean="1"/>
      </RegExp> 
      <RegExp conditional="!Google" input="$$5" output="\1" dest="4">
        <RegExp input="$$18" output="\1[^&lt;]*" dest="6">
          <expression clear="yes" repeat="yes">(?i)([a-z0-9]+)(?:%[a-f0-9]{2})*</expression>
        </RegExp>
        <RegExp input="$$1" output="&lt;entity&gt;&lt;title&gt;Anidb Search : A\1 ~ \2&lt;/title&gt;&lt;url gzip=&quot;yes&quot; cache=&quot;\1.xml&quot;&gt;http://api.anidb.net:9001/httpapi?request=anime&amp;client=xbmcscrap&amp;clientver=1&amp;protover=1&amp;aid=\1&lt;/url&gt;&lt;id&gt;\1&lt;/id&gt;&lt;/entity&gt;" dest="5">
          <expression clear="yes" repeat="yes" trim="2">&lt;anime aid=&quot;(\d+)&quot;&gt;(?:[^&lt;]*&lt;title[^&lt;]+&lt;/title&gt;)*[^&lt;]*&lt;title\s+type=&quot;main&quot;[^&gt;]*&gt;([^&lt;]*$$6[^&lt;]*)&lt;/title&gt;</expression>
        </RegExp>
        <RegExp conditional="OfficalName" input="$$1" output="&lt;entity&gt;&lt;title&gt;Anidb Search : A\1 ~ \2&lt;/title&gt;&lt;url gzip=&quot;yes&quot; cache=&quot;\1.xml&quot;&gt;http://api.anidb.net:9001/httpapi?request=anime&amp;client=xbmcscrap&amp;clientver=1&amp;protover=1&amp;aid=\1&lt;/url&gt;&lt;id&gt;\1&lt;/id&gt;&lt;/entity&gt;" dest="5+">
          <expression repeat="yes" trim="2">&lt;anime aid=&quot;(\d+)&quot;&gt;(?:[^&lt;]*&lt;title[^&lt;]+&lt;/title&gt;)*[^&lt;]*&lt;title\s+type=&quot;official&quot;\s+xml:lang=&quot;$INFO[OfficalLanguage]&quot;[^&gt;]*&gt;([^&lt;]*$$6[^&lt;]*)&lt;/title&gt;</expression>
        </RegExp>
        <RegExp conditional="!OfficalName" input="$$1" output="&lt;entity&gt;&lt;title&gt;Anidb Search : A\1 ~ \2&lt;/title&gt;&lt;url gzip=&quot;yes&quot; cache=&quot;\1.xml&quot;&gt;http://api.anidb.net:9001/httpapi?request=anime&amp;client=xbmcscrap&amp;clientver=1&amp;protover=1&amp;aid=\1&lt;/url&gt;&lt;id&gt;\1&lt;/id&gt;&lt;/entity&gt;" dest="5+">
          <expression repeat="yes" trim="2">&lt;anime aid=&quot;(\d+)&quot;&gt;(?:[^&lt;]*&lt;title[^&lt;]+&lt;/title&gt;)*[^&lt;]*&lt;title\s+type=&quot;official&quot;\s+xml:lang=&quot;en&quot;[^&gt;]*&gt;([^&lt;]*$$6[^&lt;]*)&lt;/title&gt;</expression>
        </RegExp>
        <RegExp input="$$1" output="&lt;entity&gt;&lt;title&gt;Anidb Search : A\1 ~ \2&lt;/title&gt;&lt;url gzip=&quot;yes&quot; cache=&quot;\1.xml&quot;&gt;http://api.anidb.net:9001/httpapi?request=anime&amp;client=xbmcscrap&amp;clientver=1&amp;protover=1&amp;aid=\1&lt;/url&gt;&lt;id&gt;\1&lt;/id&gt;&lt;/entity&gt;" dest="5+">
          <expression repeat="yes" trim="2">&lt;anime aid=&quot;(\d+)&quot;&gt;(?:[^&lt;]*&lt;title[^&lt;]+&lt;/title&gt;)*[^&lt;]*&lt;title\s+type=&quot;syn&quot;\s+xml:lang=&quot;x-jat&quot;[^&gt;]*&gt;([^&lt;]*$$6[^&lt;]*)&lt;/title&gt;</expression>
        </RegExp>
        <expression noclean="1"/>
      </RegExp>
      <RegExp input="" output="" dest="1">
        <expression clear="yes"/>
      </RegExp>
      <expression noclean="1"/>
    </RegExp>
  </GetSearchResults>

  <GetSearchResultsExt clearbuffers="no" dest="4">
    <RegExp input="$$4" output="&lt;results&gt;\1&lt;/results&gt;" dest="4">
      <RegExp input="$$1" output="\1" dest="20">
        <expression clear="yes">(?i)&lt;anime\s+id=&quot;(\d+)&quot;</expression>
      </RegExp>
      <RegExp input="$$1" output="\1" dest="19">
        <expression clear="yes" trim="1">(?i)&lt;title.*?type=&quot;main&quot;&gt;([^&lt;]+)&lt;/title&gt;</expression>
      </RegExp>
      <RegExp conditional="OfficalName" input="$$1" output="\1" dest="19">
        <expression trim="1">(?i)&lt;title\s+xml:lang=&quot;$INFO[OfficalLanguage]&quot;\s+type=&quot;official&quot;&gt;([^&lt;]+)&lt;/title&gt;</expression>
      </RegExp>
      <RegExp input="$$20-$$19" output="&lt;entity&gt;&lt;title&gt;Google Search : A\1 ~ \2&lt;/title&gt;&lt;url gzip=&quot;yes&quot; cache=&quot;\1.xml&quot;&gt;http://api.anidb.net:9001/httpapi?request=anime&amp;client=xbmcscrap&amp;clientver=1&amp;protover=1&amp;aid=\1&lt;/url&gt;&lt;id&gt;\1&lt;/id&gt;&lt;/entity&gt;" dest="4">
        <expression clear="yes">(\d+)-(.+)</expression>
      </RegExp>
      <RegExp input="" output="" dest="1">
        <expression clear="yes"/>
      </RegExp>
      <expression noclean="1"/>
    </RegExp>
  </GetSearchResultsExt>

  <GetDetails clearbuffers="no" dest="3">
    <RegExp input="$$8" output="&lt;details&gt;\1&lt;/details&gt;" dest="3">
      <RegExp input="$$1" output="\1" dest="20">
        <expression noclean="1"/>
      </RegExp>
      <RegExp input="" output="" dest="8">
        <expression clear="yes"/>
      </RegExp>
      <RegExp conditional="PersonalAnimeMapping" input="" output="&lt;url function=&quot;GetPersonalAnimeMapping&quot; cache=&quot;pers-anime-list.xml&quot;&gt;$INFO[PersonalAnimeMappingUrl]&lt;/url&gt;" dest="8+">
        <expression/>
      </RegExp>
      <RegExp input="" output="&lt;url function=&quot;GetDetailsExt&quot; cache=&quot;anime-list.xml&quot;&gt;$INFO[AnimeMappingUrl]&lt;/url&gt;" dest="8+">
        <expression/>
      </RegExp>
      <RegExp input="$$20" output="&lt;id&gt;$$2&lt;/id&gt;&lt;plot&gt;### YOU ARE BANNED FROM ANIDB.NET ###\nWAIT SOME TIME UNTIL YOU ARE UNBANNED&lt;/plot&gt;&lt;episodeguide&gt;&lt;url gzip=&quot;yes&quot; cache=&quot;$$2.xml&quot;&gt;http://api.anidb.net:9001/httpapi?request=anime&amp;client=xbmcscrap&amp;clientver=1&amp;protover=1&amp;aid=$$2&lt;/url&gt;&lt;/episodeguide&gt;" dest="8">
        <expression>(?i)&lt;error&gt;banned&lt;/error&gt;</expression>
      </RegExp>
      <RegExp input="" output="" dest="1">
        <expression clear="yes"/>
      </RegExp>
      <RegExp input="" output="" dest="2">
        <expression clear="yes"/>
      </RegExp>
      <expression noclean="1"/>
    </RegExp>
  </GetDetails>

  <GetPersonalAnimeMapping clearbuffers="no" dest="3">
    <RegExp input="" output="&lt;details&gt;&lt;/details&gt;" dest="3">
      <RegExp input="$$1" output="\1" dest="2">
        <expression noclean="1"/>
      </RegExp>
      <RegExp input="" output="" dest="1">
        <expression clear="yes"/>
      </RegExp>
      <expression noclean="1"/>
    </RegExp>
  </GetPersonalAnimeMapping>

  <GetDetailsExt clearbuffers="no" dest="3">
    <RegExp input="$$8" output="&lt;details&gt;\1&lt;/details&gt;" dest="3">
      <RegExp input="$$2$$1" output="\1" dest="2">
        <expression noclean="1"/>
      </RegExp>
      <RegExp input="$$20" output="\1" dest="1">
        <expression noclean="1"/>
      </RegExp>
      <RegExp input="$$1" output="\1" dest="20">
        <expression clear="yes">(?i)&lt;anime\s+id=&quot;(\d+)&quot;</expression>
      </RegExp>
      <RegExp input="$INFO[IdFrom]" output="&lt;id&gt;$$20&lt;/id&gt;" dest="8">
        <expression clear="yes">AniDB\.net</expression>
      </RegExp>
      <RegExp input="$$2" output="\1" dest="19">
        <expression clear="yes" noclean="1">(?i)(&lt;anime\s+anidbid=&quot;$$20&quot;.*?&lt;/anime&gt;)</expression>
      </RegExp>
      <RegExp input="$$19" output="\1" dest="18">
        <expression clear="yes" noclean="1">(?i)(&lt;supplemental-info\s+replace=&quot;(?:true|yes)&quot;&gt;.*?&lt;/supplemental-info&gt;)</expression>
      </RegExp>
      <RegExp input="$$19" output="\1" dest="17">
        <expression clear="yes" noclean="1">(?i)(&lt;supplemental-info(?!\s+replace=&quot;(?:true|yes)&quot;)[^&gt;]*&gt;.*?&lt;/supplemental-info&gt;)</expression>
      </RegExp>
      <RegExp input="$$1" output="&lt;title&gt;\1&lt;/title&gt;" dest="16">
        <expression clear="yes" trim="1">(?i)&lt;title.*?type=&quot;main&quot;&gt;([^&lt;]+)&lt;/title&gt;</expression>
      </RegExp>
      <RegExp conditional="OfficalName" input="$$1" output="\1" dest="15">
        <expression clear="yes" trim="1">(?i)&lt;title\s+xml:lang=&quot;$INFO[OfficalLanguage]&quot;\s+type=&quot;official&quot;&gt;([^&lt;]+)&lt;/title&gt;</expression> 
      </RegExp>
      <RegExp conditional="OfficalName" input="$$15" output="&lt;title&gt;\1&lt;/title&gt;" dest="16">
        <expression noclean="1">(.+)</expression>
      </RegExp>
      <RegExp input="$$18" output="\1" dest="16">
        <expression noclean="1">(?i)(&lt;title&gt;.*?&lt;/title&gt;)</expression>
      </RegExp>
      <RegExp input="$$16" output="\1" dest="8+">
        <RegExp input="$$16" output="'\1" dest="16">
          <expression clear="yes" repeat="yes" noclean="1">`?([^`]+)</expression>
        </RegExp>
        <expression noclean="1">'(.*)</expression>
      </RegExp>
      <RegExp conditional="!OfficalName" input="$$1" output="&lt;originaltitle&gt;\1&lt;/originaltitle&gt;" dest="16">
        <expression clear="yes" trim="1">(?i)&lt;title\s+xml:lang=&quot;en&quot;\s+type=&quot;official&quot;&gt;([^&lt;]+)&lt;/title&gt;</expression>
      </RegExp>
      <RegExp conditional="OfficalName" input="$$15" output="&lt;originaltitle&gt;\1&lt;/originaltitle&gt;" dest="16">
        <expression noclean="1">(.+)</expression>
      </RegExp>
      <RegExp input="$$18" output="\1" dest="16">
        <expression noclean="1">(?i)(&lt;originaltitle&gt;.*?&lt;/originaltitle&gt;)</expression>
      </RegExp>
      <RegExp input="$$16" output="\1" dest="8+">
        <RegExp input="$$16" output="'\1" dest="16">
          <expression clear="yes" repeat="yes" noclean="1">`?([^`]+)</expression>
        </RegExp>
        <expression noclean="1">'(.*)</expression>
      </RegExp>
      <RegExp input="$$1" output="&lt;year&gt;\1&lt;/year&gt;" dest="16">
        <expression clear="yes">(?i)&lt;startdate&gt;(\d{4})-</expression>
      </RegExp>
      <RegExp input="$$18" output="\1" dest="16">
        <expression noclean="1">(?i)(&lt;year&gt;.*?&lt;/year&gt;)</expression>
      </RegExp>
      <RegExp input="$$16" output="\1" dest="8+">         
        <expression noclean="1"/>
      </RegExp>
      <RegExp input="$$1" output="&lt;premiered&gt;\1&lt;/premiered&gt;" dest="16">
        <expression clear="yes">&lt;startdate&gt;([^&lt;]+)&lt;/startdate&gt;</expression>
      </RegExp>
      <RegExp input="$$18" output="\1" dest="16">
        <expression noclean="1">(?i)(&lt;premiered&gt;.*?&lt;/premiered&gt;)</expression>
      </RegExp>
      <RegExp input="$$16" output="\1" dest="8+">
        <expression noclean="1"/>
      </RegExp>
      <!-- Rating is selected by scraper setting (Average or Weighted) -->
      <RegExp input="$INFO[RatingType]" output="$$5" dest="6">
        <RegExp input="$$1" output="\1;\2" dest="5">
          <expression clear="yes">(?i)&lt;temporary.+?count=&quot;(\d+)&quot;[^&gt;]*&gt;([^&lt;]+)&lt;/temporary&gt;</expression>
        </RegExp>
        <expression>Average</expression>
      </RegExp>      
      <RegExp input="$INFO[RatingType]" output="$$5" dest="6">
        <RegExp input="$$1" output="\1;\2" dest="5">
          <expression clear="yes">(?i)&lt;permanent.+?count=&quot;(\d+)&quot;[^&gt;]*&gt;([^&lt;]+)&lt;/permanent&gt;</expression>
        </RegExp>
        <expression>Weighted</expression>
      </RegExp>      
      <RegExp input="$$6" output="&lt;votes&gt;\1&lt;/votes&gt;" dest="16">
        <expression clear="yes">(\d+);.+</expression>
      </RegExp>
      <RegExp input="$$18" output="\1" dest="16">
        <expression noclean="1">(?i)(&lt;votes&gt;.*?&lt;/votes&gt;)</expression>
      </RegExp>
      <RegExp input="$$16" output="\1" dest="8+">
        <expression noclean="1"/>
      </RegExp>
      <RegExp input="$$6" output="&lt;rating&gt;\1&lt;/rating&gt;" dest="16">
        <expression clear="yes">\d+;(.+)</expression>
      </RegExp>
      <RegExp input="$$18" output="\1" dest="16">
        <expression noclean="1">(?i)(&lt;rating&gt;.*?&lt;/rating&gt;)</expression>
      </RegExp>
      <RegExp input="$$16" output="\1" dest="8+">
        <expression noclean="1"/>
      </RegExp>
      <!-- Only genres with defined weight are overtaken -->
      <RegExp input="$$1" output="\1" dest="5">
        <expression clear="yes" noclean="1">(?i)&lt;categories&gt;(.*?)&lt;/categories&gt;</expression>
      </RegExp>
      <RegExp input="$$5" output="&lt;genre&gt;\1&lt;/genre&gt;" dest="7">
        <expression clear="yes" repeat="yes">(?i)&lt;category[^&gt;]*weight=&quot;600&quot;&gt;[^&lt;]*&lt;name&gt;([^&lt;]+)&lt;/name&gt;</expression>
      </RegExp>
      <RegExp input="$INFO[GenreWeight]-$$7" output="\1" dest="6">
        <expression clear="yes" noclean="1">(?i)[^-]*600[^-]*-(.*)</expression>
      </RegExp>
      <RegExp input="$$5" output="&lt;genre&gt;\1&lt;/genre&gt;" dest="7">
        <expression clear="yes" repeat="yes">(?i)&lt;category[^&gt;]*weight=&quot;500&quot;&gt;[^&lt;]*&lt;name&gt;([^&lt;]+)&lt;/name&gt;</expression>
      </RegExp>
      <RegExp input="$INFO[GenreWeight]-$$7" output="\1" dest="6+">
        <expression noclean="1">(?i)[^-]*500[^-]*-(.*)</expression>
      </RegExp>
      <RegExp input="$$5" output="&lt;genre&gt;\1&lt;/genre&gt;" dest="7">
        <expression clear="yes" repeat="yes">(?i)&lt;category[^&gt;]*weight=&quot;400&quot;&gt;[^&lt;]*&lt;name&gt;([^&lt;]+)&lt;/name&gt;</expression>
      </RegExp>
      <RegExp input="$INFO[GenreWeight]-$$7" output="\1" dest="6+">
        <expression noclean="1">(?i)[^-]*400[^-]*-(.*)</expression>
      </RegExp>
      <RegExp input="$$5" output="&lt;genre&gt;\1&lt;/genre&gt;" dest="7">
        <expression clear="yes" repeat="yes">(?i)&lt;category[^&gt;]*weight=&quot;300&quot;&gt;[^&lt;]*&lt;name&gt;([^&lt;]+)&lt;/name&gt;</expression>
      </RegExp>
      <RegExp input="$INFO[GenreWeight]-$$7" output="\1" dest="6+">
        <expression noclean="1">(?i)[^-]*300[^-]*-(.*)</expression>
      </RegExp>
      <RegExp input="$$5" output="&lt;genre&gt;\1&lt;/genre&gt;" dest="7">
        <expression clear="yes" repeat="yes">(?i)&lt;category[^&gt;]*weight=&quot;200&quot;&gt;[^&lt;]*&lt;name&gt;([^&lt;]+)&lt;/name&gt;</expression>
      </RegExp>
      <RegExp input="$INFO[GenreWeight]-$$7" output="\1" dest="6+">
        <expression noclean="1">(?i)[^-]*200[^-]*-(.*)</expression>
      </RegExp>
      <RegExp input="$$5" output="&lt;genre&gt;\1&lt;/genre&gt;" dest="7">
        <expression clear="yes" repeat="yes">(?i)&lt;category[^&gt;]*weight=&quot;100&quot;&gt;[^&lt;]*&lt;name&gt;([^&lt;]+)&lt;/name&gt;</expression>
      </RegExp>
      <RegExp input="$INFO[GenreWeight]-$$7" output="\1" dest="6+">
        <expression noclean="1">(?i)[^-]*100[^-]*-(.*)</expression>
      </RegExp>
      <RegExp input="$$17" output="\1" dest="6+">
        <expression noclean="1" repeat="yes">(?i)(&lt;genre&gt;.*?&lt;/genre&gt;)</expression>
      </RegExp>
      <!-- Main genres filtering -->
      <RegExp input="$$6" output="\1" dest="6">
        <expression clear="yes" repeat="yes" noclean="1">(?i)(&lt;genre&gt;(?!Asia&lt;|Japan&lt;|Earth&lt;|Erotic game&lt;|Dating sim - Visual Novel&lt;|Game&lt;|Novel&lt;|Manga&lt;|Future&lt;|Present&lt;|Past&lt;|Plot continuity&lt;|Shipboard&lt;|New&lt;|Humanoid&lt;|Sudden Girlfriend Appearance&lt;|Gigantic Breasts&lt;|Large Breasts&lt;|Small Breasts&lt;|Boing&lt;|Sex&lt;|Stereotypes&lt;|Canada&lt;|Italy&lt;|United-Kingdom&lt;|Americas&lt;|United States&lt;|Female Students&lt;|Clubs&lt;|Other Planet&lt;|Europe&lt;|Twisted&lt;|Violent Retribution for Accidental Infringement&lt;)[^&lt;]+&lt;/genre&gt;)</expression>
      </RegExp>
      <!-- Ignore "Magic" if "Super Power" is present -->
      <RegExp input="$$6" output="\1\2" dest="6">
        <expression noclean="1,2">(?i)((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?&lt;genre&gt;Super Power&lt;/genre&gt;(?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?)&lt;genre&gt;Magic&lt;/genre&gt;((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*)</expression>
      </RegExp>
      <RegExp input="$$6" output="\1\2" dest="6">
        <expression noclean="1,2">(?i)((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?)&lt;genre&gt;Magic&lt;/genre&gt;((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?&lt;genre&gt;Super Power&lt;/genre&gt;(?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*)</expression>
      </RegExp>
      <!-- Ignore "Magic" if "Mahou Shoujo" is present -->
      <RegExp input="$$6" output="\1\2" dest="6">
        <expression noclean="1,2">(?i)((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?&lt;genre&gt;Mahou Shoujo&lt;/genre&gt;(?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?)&lt;genre&gt;Magic&lt;/genre&gt;((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*)</expression>
      </RegExp>
      <RegExp input="$$6" output="\1\2" dest="6">
        <expression noclean="1,2">(?i)((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?)&lt;genre&gt;Magic&lt;/genre&gt;((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?&lt;genre&gt;Mahou Shoujo&lt;/genre&gt;(?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*)</expression>
      </RegExp>
      <!-- Ignore "Super Power" if "Mahou Shoujo" is present -->
      <RegExp input="$$6" output="\1\2" dest="6">
        <expression noclean="1,2">(?i)((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?&lt;genre&gt;Mahou Shoujo&lt;/genre&gt;(?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?)&lt;genre&gt;Super Power&lt;/genre&gt;((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*)</expression>
      </RegExp>
      <RegExp input="$$6" output="\1\2" dest="6">
        <expression noclean="1,2">(?i)((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?)&lt;genre&gt;Super Power&lt;/genre&gt;((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?&lt;genre&gt;Mahou Shoujo&lt;/genre&gt;(?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*)</expression>
      </RegExp>
      <!-- Ignore "Fantasy World" if "Fantasy" is present -->
      <RegExp input="$$6" output="\1\2" dest="6">
        <expression noclean="1,2">(?i)((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?&lt;genre&gt;Fantasy&lt;/genre&gt;(?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?)&lt;genre&gt;Fantasy World&lt;/genre&gt;((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*)</expression>
      </RegExp>
      <RegExp input="$$6" output="\1\2" dest="6">
        <expression noclean="1,2">(?i)((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?)&lt;genre&gt;Fantasy World&lt;/genre&gt;((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?&lt;genre&gt;Fantasy&lt;/genre&gt;(?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*)</expression>
      </RegExp>
      <!-- Ignore "Fantasy" if "Contemporary Fantasy" is present -->
      <RegExp input="$$6" output="\1\2" dest="6">
        <expression noclean="1,2">(?i)((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?&lt;genre&gt;Contemporary Fantasy&lt;/genre&gt;(?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?)&lt;genre&gt;Fantasy&lt;/genre&gt;((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*)</expression>
      </RegExp>
      <RegExp input="$$6" output="\1\2" dest="6">
        <expression noclean="1,2">(?i)((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?)&lt;genre&gt;Fantasy&lt;/genre&gt;((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?&lt;genre&gt;Contemporary Fantasy&lt;/genre&gt;(?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*)</expression>
      </RegExp>
      <!-- Ignore "Fantasy" if "Dark Fantasy" is present -->
      <RegExp input="$$6" output="\1\2" dest="6">
        <expression noclean="1,2">(?i)((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?&lt;genre&gt;Dark Fantasy&lt;/genre&gt;(?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?)&lt;genre&gt;Fantasy&lt;/genre&gt;((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*)</expression>
      </RegExp>
      <RegExp input="$$6" output="\1\2" dest="6">
        <expression noclean="1,2">(?i)((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?)&lt;genre&gt;Fantasy&lt;/genre&gt;((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?&lt;genre&gt;Dark Fantasy&lt;/genre&gt;(?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*)</expression>
      </RegExp>
      <!-- Ignore "Catgirls" if "Juujin" is present -->
      <RegExp input="$$6" output="\1\2" dest="6">
        <expression noclean="1,2">(?i)((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?&lt;genre&gt;Juujin&lt;/genre&gt;(?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?)&lt;genre&gt;Catgirls&lt;/genre&gt;((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*)</expression>
      </RegExp>
      <RegExp input="$$6" output="\1\2" dest="6">
        <expression noclean="1,2">(?i)((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?)&lt;genre&gt;Catgirls&lt;/genre&gt;((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?&lt;genre&gt;Juujin&lt;/genre&gt;(?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*)</expression>
      </RegExp>
      <!-- Ignore "Genetic Modification" if "Human Enhancement" is present -->
      <RegExp input="$$6" output="\1\2" dest="6">
        <expression noclean="1,2">(?i)((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?&lt;genre&gt;Human Enhancement&lt;/genre&gt;(?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?)&lt;genre&gt;Genetic Modification&lt;/genre&gt;((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*)</expression>
      </RegExp>
      <RegExp input="$$6" output="\1\2" dest="6">
        <expression noclean="1,2">(?i)((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?)&lt;genre&gt;Genetic Modification&lt;/genre&gt;((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?&lt;genre&gt;Human Enhancement&lt;/genre&gt;(?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*)</expression>
      </RegExp>
      <!-- Ignore "Cyborgs" if "Human Enhancement" is present -->
      <RegExp input="$$6" output="\1\2" dest="6">
        <expression noclean="1,2">(?i)((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?&lt;genre&gt;Human Enhancement&lt;/genre&gt;(?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?)&lt;genre&gt;Cyborgs&lt;/genre&gt;((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*)</expression>
      </RegExp>
      <RegExp input="$$6" output="\1\2" dest="6">
        <expression noclean="1,2">(?i)((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?)&lt;genre&gt;Cyborgs&lt;/genre&gt;((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?&lt;genre&gt;Human Enhancement&lt;/genre&gt;(?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*)</expression>
      </RegExp>
      <!-- Ignore "Transforming Robots" if "Piloted Robots" is present -->
      <RegExp input="$$6" output="\1\2" dest="6">
        <expression noclean="1,2">(?i)((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?&lt;genre&gt;Piloted Robots&lt;/genre&gt;(?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?)&lt;genre&gt;Transforming Robots&lt;/genre&gt;((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*)</expression>
      </RegExp>
      <RegExp input="$$6" output="\1\2" dest="6">
        <expression noclean="1,2">(?i)((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?)&lt;genre&gt;Transforming Robots&lt;/genre&gt;((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?&lt;genre&gt;Piloted Robots&lt;/genre&gt;(?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*)</expression>
      </RegExp>
      <!-- Ignore "Piloted Robots" if "Mecha" is present -->
      <RegExp input="$$6" output="\1\2" dest="6">
        <expression noclean="1,2">(?i)((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?&lt;genre&gt;Mecha&lt;/genre&gt;(?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?)&lt;genre&gt;Piloted Robots&lt;/genre&gt;((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*)</expression>
      </RegExp>
      <RegExp input="$$6" output="\1\2" dest="6">
        <expression noclean="1,2">(?i)((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?)&lt;genre&gt;Piloted Robots&lt;/genre&gt;((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?&lt;genre&gt;Mecha&lt;/genre&gt;(?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*)</expression>
      </RegExp>
      <!-- Ignore "Ninjas" if "Martial Arts" is present -->
      <RegExp input="$$6" output="\1\2" dest="6">
        <expression noclean="1,2">(?i)((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?&lt;genre&gt;Martial Arts&lt;/genre&gt;(?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?)&lt;genre&gt;Ninjas&lt;/genre&gt;((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*)</expression>
      </RegExp>
      <RegExp input="$$6" output="\1\2" dest="6">
        <expression noclean="1,2">(?i)((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?)&lt;genre&gt;Ninjas&lt;/genre&gt;((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?&lt;genre&gt;Martial Arts&lt;/genre&gt;(?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*)</expression>
      </RegExp>
      <!-- Ignore "Cops" if "Special Squads" is present -->
      <RegExp input="$$6" output="\1\2" dest="6">
        <expression noclean="1,2">(?i)((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?&lt;genre&gt;Special Squads&lt;/genre&gt;(?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?)&lt;genre&gt;Cops&lt;/genre&gt;((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*)</expression>
      </RegExp>
      <RegExp input="$$6" output="\1\2" dest="6">
        <expression noclean="1,2">(?i)((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?)&lt;genre&gt;Cops&lt;/genre&gt;((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?&lt;genre&gt;Special Squads&lt;/genre&gt;(?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*)</expression>
      </RegExp>
      <!-- Ignore "Space" if "Space Travel" is present -->
      <RegExp input="$$6" output="\1\2" dest="6">
        <expression noclean="1,2">(?i)((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?&lt;genre&gt;Space Travel&lt;/genre&gt;(?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?)&lt;genre&gt;Space&lt;/genre&gt;((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*)</expression>
      </RegExp>
      <RegExp input="$$6" output="\1\2" dest="6">
        <expression noclean="1,2">(?i)((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?)&lt;genre&gt;Space&lt;/genre&gt;((?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*?&lt;genre&gt;Space Travel&lt;/genre&gt;(?:&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)*)</expression>
      </RegExp>
      <RegExp input="$$18" output="\1" dest="6">
        <expression noclean="1" repeat="yes">(?i)(&lt;genre&gt;.*?&lt;/genre&gt;)</expression>
      </RegExp>
      <!-- Only specified number genres is overtaken -->
      <RegExp input="$INFO[GenreCount]-$$6" output="\1\2\3\4\5\6\7\8\9" dest="8+">
        <expression noclean="1,2,3,4,5,6,7,8,9">(?i)9-(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)?(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)?(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)?(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)?(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)?(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)?(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)?(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)?</expression>
      </RegExp>
      <RegExp input="$INFO[GenreCount]-$$6" output="\1\2\3\4\5\6\7\8" dest="8+">
        <expression noclean="1,2,3,4,5,6,7,8">(?i)8-(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)?(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)?(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)?(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)?(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)?(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)?(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)?</expression>
      </RegExp>
      <RegExp input="$INFO[GenreCount]-$$6" output="\1\2\3\4\5\6\7" dest="8+">
        <expression noclean="1,2,3,4,5,6,7">(?i)7-(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)?(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)?(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)?(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)?(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)?(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)?</expression>
      </RegExp>
      <RegExp input="$INFO[GenreCount]-$$6" output="\1\2\3\4\5\6" dest="8+">
        <expression noclean="1,2,3,4,5,6">(?i)6-(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)?(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)?(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)?(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)?(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)?</expression>
      </RegExp>
      <RegExp input="$INFO[GenreCount]-$$6" output="\1\2\3\4\5" dest="8+">
        <expression noclean="1,2,3,4,5">(?i)5-(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)?(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)?(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)?(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)?</expression>
      </RegExp>
      <RegExp input="$INFO[GenreCount]-$$6" output="\1\2\3\4" dest="8+">
        <expression noclean="1,2,3,4">(?i)4-(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)?(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)?(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)?</expression>
      </RegExp>
      <RegExp input="$INFO[GenreCount]-$$6" output="\1\2\3" dest="8+">
        <expression noclean="1,2,3">(?i)3-(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)?(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)?</expression>
      </RegExp>
      <RegExp input="$INFO[GenreCount]-$$6" output="\1\2" dest="8+">
        <expression noclean="1,2">(?i)2-(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)?</expression>
      </RegExp>
      <RegExp input="$INFO[GenreCount]-$$6" output="\1" dest="8+">
        <expression noclean="1">(?i)1-(&lt;genre&gt;[^&lt;]+&lt;/genre&gt;)</expression>
      </RegExp>
      <RegExp input="$$1" output="\1" dest="6">
        <expression clear="yes">&lt;description[^&gt;]*&gt;(.*?)&lt;/description&gt;</expression>
      </RegExp>
      <!-- Plot filtering -->
      <RegExp input="$$6" output="\1 " dest="6">
        <expression repeat="yes" noclean="1">([^\t]*)\t?</expression>
      </RegExp>
      <RegExp input="$$6" output="\1\2" dest="6">
        <expression repeat="yes" noclean="1,2">([^\s]*)(?:(\s)\2*)?</expression>
      </RegExp>     
      <RegExp input="$$6" output="\1\2" dest="6">
        <expression repeat="yes" noclean="1,2">([^\r\n]*)(?:(\r?\n)[ \t\r\n]*)?</expression>
      </RegExp>     
      <RegExp input="$$6" output="\1" dest="6">
        <expression noclean="1">(?:\*\s?)?(.*)</expression>
      </RegExp>
      <RegExp input="$$6" output="\1 https://anidb.net/a666 []" dest="6">
        <expression/>
      </RegExp>
      <RegExp input="$$6" output="\1\2" dest="6">
        <expression repeat="yes" noclean="1,2">(?i)(.*?)https://anidb.net/[a-z]+[0-9]+\s\[([^]]*)]</expression>
      </RegExp>
      <RegExp input="$$6" output="\1 [url=][/url]" dest="6">
        <expression/>
      </RegExp>
      <RegExp input="$$6" output="\1\2" dest="6">
        <expression repeat="yes" noclean="1,2">(?i)(.*?)\[url=[^]]*]([^[]*)\[/url]</expression>
      </RegExp>
      <RegExp input="(?:quote from|quote|taken from|from the|from|source|by)" output="\1" dest="10">
        <expression noclean="1"/>
      </RegExp>
      <RegExp input="(?:www)?\.?(?:ann|animenewsnetwork|animenfo|animnfo|myanimelist|animeondvd|animeacademy|mangaupdates|manga-updates|wikipedia|wiki)(\.:)?(?:com|net|org)?:?" output="\1" dest="11">
        <expression noclean="1"/>
      </RegExp>
      <RegExp input="$$6" output="\1 [source]" dest="6">
        <expression/>
      </RegExp>
      <RegExp input="$$6" output="\1" dest="6">
        <expression repeat="yes" noclean="1">(?i)(.*?)(?:(\[)|(\()|\*)(?(2)[^]]|(?(3)[^)]|[^*]))*$$10(?(2)[^]]|(?(3)[^)]|[^*]))*(?(2)\]|(?(3)\)|\*))</expression>
      </RegExp>
      <RegExp input="$$6" output="\1 [https://]" dest="6">
        <expression/>
      </RegExp>
      <RegExp input="$$6" output="\1" dest="6">
        <expression repeat="yes" noclean="1">(?i)(.*?)(?:(\[)|(\()|\*)\s*https://(?(2)[^]]|(?(3)[^)]|[^*]))*(?(2)\]|(?(3)\)|\*))</expression>
      </RegExp>
      <RegExp input="$$6" output="\1 [animenewsnetwork]" dest="6">
        <expression/>
      </RegExp>
      <RegExp input="$$6" output="\1" dest="6">
        <expression repeat="yes" noclean="1">(?i)(.*?)(?:(\[)|(\()|\*)(?(2)[^]]|(?(3)[^)]|[^*]))*$$11(?(2)[^]]|(?(3)[^)]|[^*]))*(?(2)\]|(?(3)\)|\*))</expression>
      </RegExp>
      <RegExp input="$$6" output="\n\1\nfrom animenewsnetwork\n" dest="6">
        <expression/>
      </RegExp>
      <RegExp input="$$6" output="\1" dest="6">
        <expression repeat="yes" noclean="1">(?i)(.*?)\r?\n[^\r\n]*$$10[: ]*$$11[^\r\n]*</expression>
      </RegExp>
      <RegExp input="$$6" output="\n\1\nfrom https://\n" dest="6">
        <expression/>
      </RegExp>
      <RegExp input="$$6" output="\1" dest="6">
        <expression repeat="yes" noclean="1">(?i)(.*?)\r?\n[^\r\n]*$$10[: ]*https://[^\r\n]*</expression>
      </RegExp>
      <RegExp input="$$6" output="\n\1\nann summary\n" dest="6">
        <expression/>
      </RegExp>
      <RegExp input="$$6" output="\1" dest="6">
        <expression repeat="yes" noclean="1">(?i)(.*?)\r?\n[^\r\n]*$$11[ ]*(?:summary|decription)[^\r\n]*</expression>
      </RegExp>
      <RegExp input="$$6" output="\n\1\nhttps://\n" dest="6">
        <expression/>
      </RegExp>
      <RegExp input="$$6" output="\1" dest="6">
        <expression repeat="yes" noclean="1">(?i)(.*?)\r?\n[ ]*https://[^\r\n ]*</expression>
      </RegExp>
      <RegExp input="$$6" output="\n\1\nanimenfo\n" dest="6">
        <expression/>
      </RegExp>
      <RegExp input="$$6" output="\1" dest="6">
        <expression repeat="yes" noclean="1">(?i)(.*?)\r?\n[ ]*$$11[ ]*</expression>
      </RegExp>
      <RegExp input="$$6" output="\1 [i][/i]" dest="6">
        <expression/>
      </RegExp>
      <RegExp input="$$6" output="\1" dest="6">
        <expression repeat="yes" noclean="1">(?i)(.*?)\[i][^\[]*\[/i]</expression>
      </RegExp>
      <RegExp input="$$6" output="\n\1\ndescription by\n" dest="6">
        <expression/>
      </RegExp>
      <RegExp input="$$6" output="\1" dest="6">
        <expression repeat="yes" noclean="1">(?i)(.*?)\r?\n(\*|-)?(\*|-)?[ ]*(?:(?:description|written) by)[^\r\n]*</expression>
      </RegExp>
      <RegExp input="$$6" output="\1" dest="6">
        <expression repeat="yes" noclean="1">(?i)(.*?)\r?\n[~-]\s+(?:translated and adapted|adapted and translated)[^\r\n]*cranston[^\r\n]*</expression>
      </RegExp>
      <RegExp input="$$6" output="\1" dest="6">
        <expression noclean="1">(?:\r?\n)*(.*)</expression>
      </RegExp>
      <RegExp input="$$6" output="'\1" dest="6">
        <expression repeat="yes" noclean="1">`?([^`]+)</expression>
      </RegExp>
      <RegExp input="$$6" output="\1" dest="6">
        <expression noclean="1">'(.*)</expression>
      </RegExp>
      <RegExp input="$$6" output="&lt;plot&gt;\1&lt;/plot&gt;" dest="16">
        <expression clear="yes" noclean="1" trim="1"/>
      </RegExp>
      <RegExp input="$$18" output="\1" dest="16">
        <expression noclean="1">(?i)(&lt;plot&gt;.*?&lt;/plot&gt;)</expression>
      </RegExp>
      <RegExp input="$$16" output="\1" dest="8+">
        <expression noclean="1"/>
      </RegExp>
      <!-- Main character + optionaly Secondary character enumared as "Cast" -->
      <RegExp input="$$1" output="\1" dest="6">
        <expression clear="yes" noclean="1">(?i)&lt;characters&gt;(.*?)&lt;/characters&gt;</expression>
      </RegExp>
      <RegExp input="$$6" output="&lt;actor&gt;&lt;name&gt;\3&lt;/name&gt;&lt;role&gt;\1&lt;/role&gt;&lt;thumb&gt;https://img7.anidb.net/pics/anime/\2&lt;/thumb&gt;&lt;/actor&gt;" dest="16">
        <expression clear="yes" repeat="yes">(?i)&lt;character.*?type=&quot;main character in&quot;[^&gt;]*&gt;.*?&lt;name&gt;([^&lt;]*)&lt;/name&gt;.*?&lt;seiyuu[^&gt;]*picture=&quot;([^&quot;]*)&quot;[^&gt;]*&gt;([^&lt;]*)&lt;/seiyuu&gt;.*?&lt;/character&gt;</expression>
      </RegExp>
      <RegExp conditional="!OnlyMainCast" input="$$6" output="&lt;actor&gt;&lt;name&gt;\3&lt;/name&gt;&lt;role&gt;\1&lt;/role&gt;&lt;thumb&gt;https://img7.anidb.net/pics/anime/\2&lt;/thumb&gt;&lt;/actor&gt;" dest="16+">
        <expression repeat="yes">(?i)&lt;character.*?type=&quot;secondary cast in&quot;[^&gt;]*&gt;.*?&lt;name&gt;([^&lt;]*)&lt;/name&gt;.*?&lt;seiyuu[^&gt;]*picture=&quot;([^&quot;]*)&quot;[^&gt;]*&gt;([^&lt;]*)&lt;/seiyuu&gt;.*?&lt;/character&gt;</expression>
      </RegExp>
      <RegExp input="$$17" output="\1" dest="16+">
        <expression noclean="1" repeat="yes">(?i)(&lt;actor&gt;.*?&lt;/actor&gt;)</expression>
      </RegExp>
      <RegExp input="$$18" output="\1" dest="16">
        <expression noclean="1" repeat="yes">(?i)(&lt;actor&gt;.*?&lt;/actor&gt;)</expression>
      </RegExp>
      <RegExp input="$$16" output="\1" dest="8+">
        <RegExp input="$$16" output="'\1" dest="16">
          <expression clear="yes" repeat="yes" noclean="1">`?([^`]+)</expression>
        </RegExp>
        <expression noclean="1">'(.*)</expression>
      </RegExp>
      <!-- All "Original" and "Character" creators are enumerated as "Writter" -->
      <RegExp input="$$1" output="\1" dest="6">
        <expression clear="yes" noclean="1">(?i)&lt;creators&gt;(.*?)&lt;/creators&gt;</expression>
      </RegExp>
      <RegExp input="$$6" output="&lt;credits&gt;\1&lt;/credits&gt;" dest="16">
        <expression clear="yes" repeat="yes">(?i)&lt;name.*?type=&quot;(?:Original|Character)[^&gt;]*?&gt;(.*?)&lt;/name&gt;</expression>
      </RegExp>
      <RegExp input="$$17" output="\1" dest="16+">
        <expression noclean="1" repeat="yes">(?i)(&lt;credits&gt;.*?&lt;/credits&gt;)</expression>
      </RegExp>
      <RegExp input="$$18" output="\1" dest="16">
        <expression noclean="1" repeat="yes">(?i)(&lt;credits&gt;.*?&lt;/credits&gt;)</expression>
      </RegExp>
      <RegExp input="$$16" output="\1" dest="8+">
        <RegExp input="$$16" output="'\1" dest="16">
          <expression clear="yes" repeat="yes" noclean="1">`?([^`]+)</expression>
        </RegExp>
        <expression noclean="1">'(.*)</expression>
      </RegExp>
      <!-- All "Direction" creators are enumerated as "Director" -->
      <RegExp input="$$6" output="&lt;director&gt;\1&lt;/director&gt;" dest="16">
        <expression clear="yes" repeat="yes">(?i)&lt;name.*?type=&quot;Direction&quot;&gt;(.*?)&lt;/name&gt;</expression>
      </RegExp>
      <RegExp input="$$17" output="\1" dest="16+">
        <expression noclean="1" repeat="yes">(?i)(&lt;director&gt;.*?&lt;/director&gt;)</expression>
      </RegExp>
      <RegExp input="$$18" output="\1" dest="16">
        <expression noclean="1" repeat="yes">(?i)(&lt;director&gt;.*?&lt;/director&gt;)</expression>
      </RegExp>
      <RegExp input="$$16" output="\1" dest="8+">
        <RegExp input="$$16" output="'\1" dest="16">
          <expression clear="yes" repeat="yes" noclean="1">`?([^`]+)</expression>
        </RegExp>
        <expression noclean="1">'(.*)</expression>
      </RegExp>
      <RegExp conditional="SingleStudio" input="$$11$$10$$13$$12" output="\1" dest="8+">
        <!-- "Animation work" studios has priority over "Work" studios bellow ($$13,$$12) -->
        <RegExp input="$$6" output="&lt;studio&gt;\1&lt;/studio&gt;" dest="10">
          <expression clear="yes" repeat="yes">(?i)&lt;name.*?type=&quot;Animation Work&quot;&gt;([^&lt;]+)&lt;/name&gt;</expression>
        </RegExp>
        <RegExp input="$$17" output="\1" dest="10+">
          <expression noclean="1" repeat="yes">(?i)(&lt;studio&gt;.*?&lt;/studio&gt;)</expression>
        </RegExp>
        <RegExp input="$$18" output="\1" dest="10">
          <expression noclean="1" repeat="yes">(?i)(&lt;studio&gt;.*?&lt;/studio&gt;)</expression>
        </RegExp>
        <RegExp input="$$10" output="\1" dest="10">
          <RegExp input="$$10" output="'\1" dest="10">
            <expression clear="yes" repeat="yes" noclean="1">`?([^`]+)</expression>
          </RegExp>
          <expression clear="yes" noclean="1">'(.*)</expression>
        </RegExp>
        <!-- These studios has priority before rest bellow or not-enumerated ones ($$10) -->
        <RegExp input="$$10" output="\1" dest="11">
          <expression clear="yes" noclean="1">(?i)(&lt;studio&gt;(?=A-1 Pictures&lt;|AIC&lt;|Bee Train&lt;|Bones&lt;|Brain's Base&lt;|Gainax&lt;|Gonzo&lt;|J\.C\.Staff&lt;|Kyoto Animation&lt;|Madhouse&lt;|Manglobe&lt;|Nomad&lt;|Production I\.G&lt;|Shaft&lt;|Studio Deen&lt;|Studio Pierrot&lt;|Sunrise&lt;|Xebec&lt;|ZEXCS&lt;)[^&lt;]+&lt;/studio&gt;)</expression>
        </RegExp>
        <RegExp input="$$10" output="\1" dest="11+">
          <expression noclean="1">(?i)(&lt;studio&gt;(?=A-1 Pictures&lt;|ACGT&lt;|Actas&lt;|AIC A\.S\.T\.A&lt;|AIC Digital&lt;|AIC Plus\+&lt;|AIC Spirits&lt;|AIC&lt;|Ajia-dou&lt;|Animate Film&lt;|Anime Friend&lt;|Aquaplus&lt;|Arcturus&lt;|Arms&lt;|Artland&lt;|Artmic&lt;|Ashi Productions&lt;|Bee Train&lt;|Bones&lt;|Brain's Base&lt;|CoMix Wave Films&lt;|Daume&lt;|David Production&lt;|Diomedea&lt;|Doga Kobo&lt;|E&amp;G Films&lt;|G&amp;G Entertainment&lt;|G&amp;G Entertainmnt&lt;|Gainax&lt;|GK Entertainment&lt;|Gonzo&lt;|Group Tac&lt;|Hal Film Maker&lt;|Imagin&lt;|J\.C\.Staff&lt;|Karaku&lt;|Keyeast&lt;|Kyoto Animation&lt;|Madhouse&lt;|Manglobe&lt;|Nippon Animation&lt;|Nomad&lt;|OB Planning&lt;|OLM&lt;|Ordet&lt;|P\.A\. Works&lt;|Production I\.G&lt;|Radix Ace Entertainment&lt;|Radix&lt;|Satelight&lt;|Seven Arcs&lt;|Shaft&lt;|Studio 4C&lt;|Studio Barcelona&lt;|Studio Comet&lt;|Studio Deen&lt;|Studio Fantasia&lt;|Studio Ghibli&lt;|Studio Guts&lt;|Studio Hibari&lt;|Studio Izena&lt;|Studio Pierrot&lt;|Studio Rikka&lt;|Sunrise&lt;|Synergy Japan&lt;|SynergySP&lt;|Tatsunoko Production&lt;|Tezuka Productions&lt;|TMS Entertainment&lt;|Toei Animation&lt;|Toei Douga&lt;|Tokyo Movie&lt;|Trans Arts&lt;|Triangle Staff&lt;|Ufotable&lt;|White Fox&lt;|Xebec M2&lt;|Xebec&lt;|Yumeta Company&lt;|Zero G Room&lt;|ZEXCS&lt;)[^&lt;]+&lt;/studio&gt;)</expression>
        </RegExp>
        <!-- Same as above only for "Work" studios -->
        <RegExp input="$$6" output="&lt;studio&gt;\1&lt;/studio&gt;" dest="12">
          <expression clear="yes" repeat="yes">(?i)&lt;name.*?type=&quot;Work&quot;&gt;([^&lt;]+)&lt;/name&gt;</expression>
        </RegExp>
        <RegExp input="$$12" output="\1" dest="12">
          <RegExp input="$$12" output="'\1" dest="12">
            <expression clear="yes" repeat="yes" noclean="1">`?([^`]+)</expression>
          </RegExp>
          <expression clear="yes" noclean="1">'(.*)</expression>
        </RegExp>
        <RegExp input="$$12" output="\1" dest="13">
          <expression clear="yes" noclean="1">(?i)(&lt;studio&gt;(?=A-1 Pictures&lt;|AIC&lt;|Bee Train&lt;|Bones&lt;|Brain's Base&lt;|Gainax&lt;|Gonzo&lt;|J\.C\.Staff&lt;|Kyoto Animation&lt;|Madhouse&lt;|Manglobe&lt;|Nomad&lt;|Production I\.G&lt;|Shaft&lt;|Studio Deen&lt;|Studio Pierrot&lt;|Sunrise&lt;|Xebec&lt;|ZEXCS&lt;)[^&lt;]+&lt;/studio&gt;)</expression>
        </RegExp>
        <RegExp input="$$12" output="\1" dest="13+">
          <expression noclean="1">(?i)(&lt;studio&gt;(?=A-1 Pictures&lt;|ACGT&lt;|Actas&lt;|AIC A\.S\.T\.A&lt;|AIC Digital&lt;|AIC Plus\+&lt;|AIC Spirits&lt;|AIC&lt;|Ajia-dou&lt;|Animate Film&lt;|Anime Friend&lt;|Aquaplus&lt;|Arcturus&lt;|Arms&lt;|Artland&lt;|Artmic&lt;|Ashi Productions&lt;|Bee Train&lt;|Bones&lt;|Brain's Base&lt;|CoMix Wave Films&lt;|Daume&lt;|David Production&lt;|Diomedea&lt;|Doga Kobo&lt;|E&amp;G Films&lt;|G&amp;G Entertainment&lt;|G&amp;G Entertainmnt&lt;|Gainax&lt;|GK Entertainment&lt;|Gonzo&lt;|Group Tac&lt;|Hal Film Maker&lt;|Imagin&lt;|J\.C\.Staff&lt;|Karaku&lt;|Keyeast&lt;|Kyoto Animation&lt;|Madhouse&lt;|Manglobe&lt;|Nippon Animation&lt;|Nomad&lt;|OB Planning&lt;|OLM&lt;|Ordet&lt;|P\.A\. Works&lt;|Production I\.G&lt;|Radix Ace Entertainment&lt;|Radix&lt;|Satelight&lt;|Seven Arcs&lt;|Shaft&lt;|Studio 4C&lt;|Studio Barcelona&lt;|Studio Comet&lt;|Studio Deen&lt;|Studio Fantasia&lt;|Studio Ghibli&lt;|Studio Guts&lt;|Studio Hibari&lt;|Studio Izena&lt;|Studio Pierrot&lt;|Studio Rikka&lt;|Sunrise&lt;|Synergy Japan&lt;|SynergySP&lt;|Tatsunoko Production&lt;|Tezuka Productions&lt;|TMS Entertainment&lt;|Toei Animation&lt;|Toei Douga&lt;|Tokyo Movie&lt;|Trans Arts&lt;|Triangle Staff&lt;|Ufotable&lt;|White Fox&lt;|Xebec M2&lt;|Xebec&lt;|Yumeta Company&lt;|Zero G Room&lt;|ZEXCS&lt;)[^&lt;]+&lt;/studio&gt;)</expression>
        </RegExp>
        <!-- Only first studio is overtaken, order is result of joint $$11$$10$$13$$12 -->
        <expression noclean="1">(&lt;studio&gt;.+?&lt;/studio&gt;)</expression>
      </RegExp>
      <RegExp conditional="!SingleStudio" input="$$7" output="\1" dest="8+">
        <!-- All studios found are overtaken -->
        <RegExp input="$$6" output="&lt;studio&gt;\1&lt;/studio&gt;" dest="7">
          <expression clear="yes" repeat="yes">(?i)&lt;name.*?type=&quot;Work&quot;&gt;([^&lt;]+)&lt;/name&gt;</expression>
        </RegExp>
        <!-- But "Animation Work" has priority and if there is any then "Work" studios are overwritten -->
        <RegExp input="$$6" output="&lt;studio&gt;\1&lt;/studio&gt;" dest="7">
          <expression repeat="yes">(?i)&lt;name.*?type=&quot;Animation Work&quot;&gt;([^&lt;]+)&lt;/name&gt;</expression>
        </RegExp>
        <RegExp input="$$17" output="\1" dest="7+">
          <expression noclean="1" repeat="yes">(?i)(&lt;studio&gt;.*?&lt;/studio&gt;)</expression>
        </RegExp>
        <RegExp input="$$18" output="\1" dest="7">
          <expression noclean="1" repeat="yes">(?i)(&lt;studio&gt;.*?&lt;/studio&gt;)</expression>
        </RegExp>
        <expression noclean="1"/>
      </RegExp>
      <RegExp input="" output="" dest="14">
        <expression clear="yes"/>
      </RegExp>
      <RegExp input="" output="" dest="15">
        <expression clear="yes"/>
      </RegExp>
      <RegExp conditional="Posters" input="$$1" output="&lt;thumb&gt;https://img7.anidb.net/pics/anime/\1&lt;/thumb&gt;" dest="15">
        <expression>(?i)&lt;picture&gt;([^&lt;]+)&lt;/picture&gt;</expression>
      </RegExp>
      <RegExp conditional="Posters" input="$$17" output="\1" dest="15+">
        <expression noclean="1" repeat="yes">(?i)(&lt;thumb&gt;.*?&lt;/thumb&gt;)</expression>
      </RegExp>
      <RegExp conditional="Posters" input="$$18" output="\1" dest="15">
        <expression noclean="1" repeat="yes">(?i)(&lt;thumb&gt;.*?&lt;/thumb&gt;)</expression>
      </RegExp>
      <RegExp input="" output="" dest="16">
        <expression clear="yes"/>
      </RegExp>
      <RegExp conditional="Fanarts" input="$$18" output="\1" dest="16">
        <expression noclean="1">(?i)(&lt;fanart.*?&lt;/fanart&gt;)</expression>
      </RegExp>
      <RegExp input="$$20" output="&lt;episodeguide&gt;&lt;url gzip=&quot;yes&quot; cache=&quot;$$20.xml&quot;&gt;http://api.anidb.net:9001/httpapi?request=anime&amp;client=xbmcscrap&amp;clientver=1&amp;protover=1&amp;aid=$$20&lt;/url&gt;&lt;/episodeguide&gt;" dest="8+">
        <expression/>
      </RegExp>
      <RegExp input="$$20" output="&lt;url function=&quot;GetTVDBLookupAPI&quot; cache=&quot;$$20.xml&quot;&gt;&amp;&lt;/url&gt;" dest="6">
        <expression clear="yes"/>
      </RegExp>
      <RegExp input="$$19" output="\1" dest="19">
        <expression clear="yes">(?i)tvdbid=&quot;([^&quot;]*)&quot;</expression>
      </RegExp>
      <RegExp input="$$19" output="&lt;url function=&quot;GetFanartDataAPI&quot; cache=&quot;tvdb-$$20.xml&quot;&gt;https://www.thetvdb.com/api/1D62F2F90030C444/series/\1/all/en.zip&lt;/url&gt;" dest="6">
        <expression>(\d+)</expression>
      </RegExp>
      <RegExp input="$$19" output="&lt;url function=&quot;GetFanartDataReturnAPI&quot; cache=&quot;$$20.xml&quot;&gt;&amp;&lt;/url&gt;" dest="6">
        <expression>[^\d]+</expression>
      </RegExp>
      <RegExp input="$$6" output="\1" dest="8+">
        <expression noclean="1"/>
      </RegExp>
      <RegExp input="" output="" dest="1">
        <expression clear="yes"/>
      </RegExp>
      <RegExp input="true" output="\1" dest="13">
        <expression clear="yes"/>
      </RegExp>
      <expression noclean="1"/>
    </RegExp>
  </GetDetailsExt>

  <!--
    Persistent variables:
    $$20 ... AniDB anime id
    $$19 ... TheTvDb anime id
    $$18 ... Alternative titles for TheTvDb search 
    $$17 ... AniDB prequel id
    $$16 ... List of fanarts
    $$15 ... List of thumbs
    $$14 ... List of banners
    $$13 ... Direct call to GetFanartDataAPI (true/false)
  -->

  <GetTVDBLookupAPI clearbuffers="no" dest="4">
    <RegExp input="$$9" output="&lt;details&gt;&lt;url function=&quot;GetFanartAPI&quot; cache=&quot;tvdb-s$$20-\1.xml&quot;&gt;https://www.thetvdb.com/api/GetSeries.php?seriesname=\1&lt;/url&gt;&lt;/details&gt;" dest="4">
      <RegExp input="$$1" output="\1" dest="5">
        <expression clear="yes" trim="1">(?i)&lt;title.*?type=&quot;main&quot;&gt;([^&lt;]+)&lt;/title&gt;</expression>
      </RegExp>
      <RegExp input="$$1" output="\1" dest="6">
        <expression clear="yes" trim="1">(?i)&lt;title\s+xml:lang=&quot;en&quot;\s+type=&quot;official&quot;&gt;((?!$$5&lt;)[^&lt;]+)&lt;/title&gt;</expression>
      </RegExp>
      <RegExp input="$$1" output="\1" dest="7">
        <expression clear="yes" trim="1">(?i)&lt;title\s+xml:lang=&quot;x-jat&quot;\s+type=&quot;synonym&quot;&gt;((?!$$5&lt;|$$6&lt;)[^&lt;]+)&lt;/title&gt;</expression>
      </RegExp>
      <RegExp input="$$1" output="\1" dest="8">
        <expression clear="yes" trim="1">(?i)&lt;title\s+xml:lang=&quot;en&quot;\s+type=&quot;synonym&quot;&gt;((?!$$5&lt;|$$6&lt;|$$7&lt;)[^&lt;]+)&lt;/title&gt;</expression>
      </RegExp>
      <RegExp input="$$9" output="\1" dest="9">
        <RegExp input="$$5" output="'\1" dest="9">
          <expression clear="yes" repeat="yes">`?([^`]+)</expression>
        </RegExp>
        <expression>'(.*)</expression>
      </RegExp>
      <RegExp input="$$9" output="\1%20" dest="9">
        <expression repeat="yes">([a-zA-Z0-9'!-.]+)</expression>
      </RegExp>
      <RegExp input="$$9" output="\1" dest="9">
        <expression noclean="1">(.+)%20</expression>
      </RegExp>
      <RegExp input="$$10" output="\1" dest="10">
        <RegExp input="$$6" output="'\1" dest="10">
          <expression clear="yes" repeat="yes">`?([^`]+)</expression>
        </RegExp>
        <expression>'(.*)</expression>
      </RegExp>
      <RegExp input="$$10" output="\1%20" dest="10">
        <expression repeat="yes">([a-zA-Z0-9'!-.]+)</expression>
      </RegExp>
      <RegExp input="$$10" output="&lt;title&gt;\1&lt;/title&gt;" dest="18">
        <expression clear="yes" noclean="1">(.+)%20</expression>
      </RegExp>
      <RegExp input="$$10" output="\1" dest="10">
        <RegExp input="$$7" output="'\1" dest="10">
          <expression clear="yes" repeat="yes">`?([^`]+)</expression>
        </RegExp>
        <expression>'(.*)</expression>
      </RegExp>
      <RegExp input="$$10" output="\1%20" dest="10">
        <expression repeat="yes">([a-zA-Z0-9'!-.]+)</expression>
      </RegExp>
      <RegExp input="$$10" output="&lt;title&gt;\1&lt;/title&gt;" dest="10">
        <expression clear="yes" noclean="1">(.+)%20</expression>
      </RegExp>
      <RegExp input="$$10" output="\1" dest="18+">
        <expression noclean="1"/>
      </RegExp>
      <RegExp input="$$10" output="\1" dest="10">
        <RegExp input="$$8" output="'\1" dest="10">
          <expression clear="yes" repeat="yes">`?([^`]+)</expression>
        </RegExp>
        <expression>'(.*)</expression>
      </RegExp>
      <RegExp input="$$10" output="\1%20" dest="10">
        <expression repeat="yes">([a-zA-Z0-9'!-.]+)</expression>
      </RegExp>
      <RegExp input="$$10" output="&lt;title&gt;\1&lt;/title&gt;" dest="10">
        <expression clear="yes" noclean="1">(.+)%20</expression>
      </RegExp>
      <RegExp input="$$10" output="\1" dest="18+">
        <expression noclean="1"/>
      </RegExp>
      <RegExp input="false" output="\1" dest="13">
        <expression clear="yes"/>
      </RegExp>
      <RegExp conditional="Prequels" input="$$10" output="\1" dest="17">
        <RegExp input="$$1" output="\1" dest="10">
          <expression clear="yes">(?i)&lt;anime id=&quot;(\d+)&quot; type=&quot;$INFO[AlternativePrequelLinkType]&quot;&gt;</expression>
        </RegExp>
        <RegExp input="$$1" output="\1" dest="10">
          <expression>(?i)&lt;anime id=&quot;(\d+)&quot; type=&quot;Prequel&quot;&gt;</expression>
        </RegExp>
        <expression clear="yes">(\d+)</expression>
      </RegExp>
      <RegExp input="" output="" dest="1">
        <expression clear="yes"/>
      </RegExp>
      <expression noclean="1"/>
    </RegExp>              
  </GetTVDBLookupAPI>

  <GetTVDBLookupLoopAPI clearbuffers="no" dest="4">
    <RegExp input="$$4" output="&lt;details&gt;\1&lt;/details&gt;" dest="4">
      <RegExp input="$$8" output="&lt;url function=&quot;GetFanartAPI&quot; cache=&quot;tvdb-s$$20-\1.xml&quot;&gt;https://www.thetvdb.com/api/GetSeries.php?seriesname=\1&lt;/url&gt;" dest="5">
        <RegExp input="$$18" output="\1" dest="8">
          <expression clear="yes" noclean="1">(?i)&lt;title&gt;([^&lt;]+)&lt;/title&gt;</expression>
        </RegExp>
        <expression clear="yes" noclean="1">(.+)</expression>
      </RegExp>
      <RegExp conditional="Prequels" input="$$17" output="&lt;url function=&quot;GetTVDBLookupAPI&quot; gzip=&quot;yes&quot; cache=&quot;\1.xml&quot;&gt;http://api.anidb.net:9001/httpapi?request=anime&amp;client=xbmcscrap&amp;clientver=1&amp;protover=1&amp;aid=\1&lt;/url&gt;" dest="6">
        <expression clear="yes">(\d+)</expression>
      </RegExp>
      <RegExp input="$$20" output="&lt;url function=&quot;GetFanartDataReturnAPI&quot; cache=&quot;\1.xml&quot;&gt;&amp;&lt;/url&gt;" dest="7">
        <expression clear="yes"/>
      </RegExp>
      <RegExp input="$$5$$6$$7" output="\1" dest="4">
        <expression clear="yes" noclean="1">(?i)(&lt;url.*?&lt;/url&gt;)</expression>
      </RegExp>
      <RegExp input="$$18-$$4" output="\1" dest="18">
        <expression noclean="1">(?i)&lt;title&gt;[^&lt;]+&lt;/title&gt;((?:&lt;title&gt;[^&lt;]+&lt;/title&gt;)*)-\Q$$5\E</expression>
      </RegExp>
      <RegExp input="$$17-$$4" output="\1" dest="20">
        <expression>(\d+)-\Q$$6\E</expression>
      </RegExp>
      <RegExp input="$$4" output="\1" dest="17">
        <expression>()\Q$$6\E</expression>
      </RegExp>
      <RegExp input="" output="" dest="1">
        <expression clear="yes"/>
      </RegExp>
      <expression noclean="1"/>
    </RegExp>
  </GetTVDBLookupLoopAPI>

  <GetFanartAPI clearbuffers="no" dest="4">
    <!--RegExp input="$$4" output="&lt;details&gt;\1&lt;/details&gt;      @@@### $$5 ###@@@" dest="4"-->
    <RegExp input="$$4" output="&lt;details&gt;\1&lt;/details&gt;" dest="4">
      <RegExp input="$$20" output="&lt;url function=&quot;GetTVDBLookupLoopAPI&quot; cache=&quot;\1.xml&quot;&gt;&amp;&lt;/url&gt;" dest="4">
        <expression clear="yes"/>
      </RegExp>
      <RegExp input="$$1" output="&lt;url function=&quot;GetFanartDataAPI&quot; cache=&quot;tvdb-$$20.xml&quot;&gt;https://www.thetvdb.com/api/1D62F2F90030C444/series/\1/all/en.zip&lt;/url&gt;" dest="4">
        <expression>(?i)&lt;seriesid&gt;(\d+)&lt;/seriesid&gt;</expression>
      </RegExp>
      <RegExp input="$$1" output="&lt;anime anidbid=&quot;$$20&quot; tvdbid=&quot;\1&quot; defaulttvdbseason=&quot;1&quot;&gt;&lt;name&gt;$$20&lt;/name&gt;&lt;/anime&gt;" dest="5">
        <expression clear="yes">(?i)&lt;seriesid&gt;(\d+)&lt;/seriesid&gt;</expression>
      </RegExp>
      <RegExp input="$$1" output="\1" dest="19">
        <expression>(?i)&lt;seriesid&gt;(\d+)&lt;/seriesid&gt;</expression>
      </RegExp>
      <RegExp input="" output="" dest="1">
        <expression clear="yes"/>
      </RegExp>
      <expression noclean="1"/>
    </RegExp>
  </GetFanartAPI>

  <GetFanartDataReturnAPI clearbuffers="no" dest="4">
    <RegExp input="$$6$$5$$16" output="&lt;details&gt;\1&lt;/details&gt;" dest="4">
      <RegExp input="$INFO[IdFrom]-$$19" output="&lt;id&gt;\1&lt;/id&gt;" dest="6">
        <expression clear="yes">TheTVDB\.com-(\d+)</expression>
      </RegExp>
      <RegExp input="" output="$$15$$14" dest="5">
        <expression clear="yes"/>
      </RegExp>      
      <RegExp input="$INFO[PostersOrder]" output="$$15$$14" dest="5">
        <expression>Posters first</expression>
      </RegExp>      
      <RegExp input="$INFO[PostersOrder]" output="$$14$$15" dest="5">
        <expression>Banners first</expression>
      </RegExp>
      <RegExp input="" output="" dest="1">
        <expression clear="yes"/>
      </RegExp>
      <expression noclean="1"/>
    </RegExp>
  </GetFanartDataReturnAPI>
  
  <GetFanartDataAPI clearbuffers="no" dest="4">
    <RegExp input="$$4" output="&lt;details&gt;\1&lt;/details&gt;" dest="4">
      <RegExp input="$$1" output="\1" dest="5">
        <expression clear="yes" noclean="1">(?i)&lt;Banners&gt;(.*?)&lt;/Banners&gt;</expression>
      </RegExp>
      <RegExp conditional="Fanarts" input="$$6" output="&lt;fanart url=&quot;https://thetvdb.com/banners/&quot;&gt;\1&lt;/fanart&gt;" dest="16+">
        <RegExp input="$$5" output="&lt;thumb dim=&quot;\2&quot; colors=&quot;\3&quot; preview=&quot;_cache/\1&quot;&gt;\1&lt;/thumb&gt;" dest="6">
          <expression clear="yes" repeat="yes">(?i)&lt;BannerPath&gt;([^&lt;]*)&lt;/BannerPath&gt;[^&lt;]*&lt;BannerType&gt;fanart&lt;/BannerType&gt;[^&lt;]*&lt;BannerType2&gt;([^&lt;]*)&lt;/BannerType2&gt;[^&lt;]*&lt;Colors&gt;([^&lt;]*)&lt;/Colors&gt;</expression>
        </RegExp>
        <expression noclean="1">(.+)</expression>
      </RegExp>
      <RegExp conditional="Posters" input="$$5" output="&lt;thumb&gt;https://thetvdb.com/banners/\1&lt;/thumb&gt;" dest="15+">
        <expression repeat="yes">(?i)&lt;BannerPath&gt;([^&lt;]*)&lt;/BannerPath&gt;[^&lt;]*&lt;BannerType&gt;poster&lt;/BannerType&gt;</expression>
      </RegExp>
      <RegExp conditional="Posters" input="$$5" output="&lt;thumb&gt;https://thetvdb.com/banners/\1&lt;/thumb&gt;" dest="15+">
        <expression repeat="yes">(?i)&lt;BannerPath&gt;([^&lt;]*)&lt;/BannerPath&gt;[^&lt;]*&lt;BannerType&gt;season&lt;/BannerType&gt;[^&lt;]*&lt;BannerType2&gt;season&lt;/BannerType2&gt;</expression>
      </RegExp>
      <RegExp conditional="Banners" input="$$5" output="&lt;thumb&gt;https://thetvdb.com/banners/\1&lt;/thumb&gt;" dest="14+">
        <expression repeat="yes">(?i)&lt;BannerPath&gt;([^&lt;]*)&lt;/BannerPath&gt;[^&lt;]*&lt;BannerType&gt;season&lt;/BannerType&gt;[^&lt;]*&lt;BannerType2&gt;seasonwide&lt;/BannerType2&gt;</expression>
      </RegExp>
      <RegExp conditional="Banners" input="$$5" output="&lt;thumb&gt;https://thetvdb.com/banners/\1&lt;/thumb&gt;" dest="14+">
        <expression repeat="yes">(?i)&lt;BannerPath&gt;([^&lt;]*)&lt;/BannerPath&gt;[^&lt;]*&lt;BannerType&gt;series&lt;/BannerType&gt;[^&lt;]*&lt;BannerType2&gt;graphical&lt;/BannerType2</expression>
      </RegExp>
      <RegExp conditional="Banners" input="$$5" output="&lt;thumb&gt;https://thetvdb.com/banners/\1&lt;/thumb&gt;" dest="14+">
        <expression repeat="yes">(?i)&lt;BannerPath&gt;([^&lt;]*)&lt;/BannerPath&gt;[^&lt;]*&lt;BannerType&gt;series&lt;/BannerType&gt;[^&lt;]*&lt;BannerType2&gt;text&lt;/BannerType2</expression>
      </RegExp>
      <RegExp conditional="Banners" input="$$5" output="&lt;thumb&gt;https://thetvdb.com/banners/\1&lt;/thumb&gt;" dest="14+">
        <expression repeat="yes">(?i)&lt;BannerPath&gt;([^&lt;]*)&lt;/BannerPath&gt;[^&lt;]*&lt;BannerType&gt;series&lt;/BannerType&gt;[^&lt;]*&lt;BannerType2&gt;blank&lt;/BannerType2</expression>
      </RegExp>
      <RegExp input="" output="" dest="4">
        <expression clear="yes"/>
      </RegExp>
      <RegExp conditional="NoFanartContinue" input="$$16" output="&lt;url function=&quot;GetTVDBLookupLoopAPI&quot; cache=&quot;$$20.xml&quot;&gt;&amp;&lt;/url&gt;" dest="4">
        <expression/>
      </RegExp>
      <RegExp input="$$13" output="&lt;url function=&quot;GetFanartDataReturnAPI&quot; cache=&quot;$$20.xml&quot;&gt;&amp;&lt;/url&gt;" dest="4">
        <expression>true</expression>
      </RegExp>
      <RegExp conditional="NoFanartContinue" input="$$16" output="&lt;url function=&quot;GetFanartDataReturnAPI&quot; cache=&quot;$$20.xml&quot;&gt;&amp;&lt;/url&gt;" dest="4">
        <expression>.+</expression>
      </RegExp>
      <RegExp conditional="!NoFanartContinue" input="$$16" output="&lt;url function=&quot;GetFanartDataReturnAPI&quot; cache=&quot;$$20.xml&quot;&gt;&amp;&lt;/url&gt;" dest="4">
        <expression/>
      </RegExp>
      <RegExp input="" output="" dest="1">
        <expression clear="yes"/>
      </RegExp>
      <expression noclean="1"/>
    </RegExp>
  </GetFanartDataAPI>
  
  <GetEpisodeList clearbuffers="yes" dest="4">
    <RegExp input="$$8" output="&lt;episodeguide&gt;\1&lt;/episodeguide&gt;" dest="4">
      <RegExp input="$$1" output="\1" dest="20">
        <expression>&lt;anime id=&quot;(\d+)&quot;</expression>
      </RegExp>
      <RegExp input="$$1" output="\1" dest="6">
        <expression clear="yes" noclean="1">(?i)&lt;characters&gt;.*?&lt;/characters&gt;.*?(&lt;episodes&gt;.*?&lt;/episodes&gt;)</expression>
      </RegExp>
      <RegExp input="$$1" output="\1" dest="6+">
        <expression noclean="1">(?i)(&lt;episodes&gt;.*?&lt;/episodes&gt;)</expression>
      </RegExp>
      <RegExp input="$$6" output="\1" dest="7">
        <expression clear="yes" noclean="1">(?i)&lt;episodes&gt;(.*?)&lt;/episodes&gt;</expression>
      </RegExp>
      <RegExp input="$$7" output="&lt;episode&gt;&lt;title&gt;\4&lt;/title&gt;&lt;url cache=&quot;$$20.xml&quot;&gt;\1&lt;/url&gt;&lt;epnum&gt;\2&lt;/epnum&gt;&lt;season&gt;1&lt;/season&gt;&lt;id&gt;\1&lt;/id&gt;&lt;aired&gt;\3&lt;/aired&gt;&lt;/episode&gt;" dest="8">
        <expression clear="yes" repeat="yes">(?i)&lt;episode\s+id=&quot;(\d+)&quot;[^&gt;]*&gt;\s*&lt;epno\s+type=&quot;1&quot;&gt;(\d+)&lt;/epno&gt;\s*(?:&lt;length&gt;[^&lt;]*&lt;/length&gt;\s*)?(?:&lt;airdate&gt;([^&lt;]+)&lt;/airdate&gt;\s*)?(?:&lt;rating[^&gt;]*&gt;[^&lt;]*&lt;/rating&gt;\s*)?(?:&lt;title[^&gt;]*&gt;[^&lt;]*&lt;/title&gt;\s*)*?&lt;title xml:lang=&quot;en&quot;&gt;([^&lt;]+)&lt;/title&gt;.*?&lt;/episode&gt;</expression>
      </RegExp>
      <RegExp input="$$7" output="&lt;episode&gt;&lt;title&gt;\4&lt;/title&gt;&lt;url cache=&quot;$$20.xml&quot;&gt;\1&lt;/url&gt;&lt;epnum&gt;\2&lt;/epnum&gt;&lt;season&gt;0&lt;/season&gt;&lt;id&gt;\1&lt;/id&gt;&lt;aired&gt;\3&lt;/aired&gt;&lt;/episode&gt;" dest="8+">
        <expression repeat="yes">(?i)&lt;episode\s+id=&quot;(\d+)&quot;[^&gt;]*&gt;\s*&lt;epno\s+type=&quot;2&quot;&gt;s(\d+)&lt;/epno&gt;\s*(?:&lt;length&gt;[^&lt;]*&lt;/length&gt;\s*)?(?:&lt;airdate&gt;([^&lt;]+)&lt;/airdate&gt;\s*)?(?:&lt;rating[^&gt;]*&gt;[^&lt;]*&lt;/rating&gt;\s*)?(?:&lt;title[^&gt;]*&gt;[^&lt;]*&lt;/title&gt;\s*)*?&lt;title xml:lang=&quot;en&quot;&gt;([^&lt;]+)&lt;/title&gt;.*?&lt;/episode&gt;</expression>
      </RegExp>
      <expression noclean="1"/>
    </RegExp>
  </GetEpisodeList>
  
  <GetEpisodeDetails clearbuffers="no" dest="4">
    <RegExp input="$$4" output="&lt;details&gt;\1&lt;/details&gt;" dest="4">
      <RegExp input="$$1" output="\1" dest="5">
        <expression clear="yes" noclean="1">(?i)(&lt;episode id=&quot;$$3&quot;.*?&lt;/episode&gt;)</expression>
      </RegExp>
      <RegExp input="$$3" output="&lt;code&gt;\1&lt;/code&gt;" dest="4">
        <expression clear="yes"/>
      </RegExp>
      <RegExp input="$$7" output="&lt;title&gt;\1&lt;/title&gt;" dest="4+">
        <RegExp input="$$5" output="\1" dest="6">
          <expression clear="yes">(?i)&lt;title xml:lang=&quot;en&quot;[^&gt;]*&gt;([^&lt;]+)&lt;/title&gt;</expression>
        </RegExp>
        <RegExp input="$$6" output="'\1" dest="7">
          <expression clear="yes" repeat="yes">`?([^`]+)</expression>
        </RegExp>
        <expression>'(.*)</expression>
      </RegExp>
      <RegExp input="$$5" output="1-\1" dest="9">
        <expression clear="yes">(?i)&lt;epno[^&gt;]*&gt;(\d+)&lt;/epno&gt;</expression>
      </RegExp>
      <RegExp input="$$5" output="0-\1" dest="9">
        <expression>(?i)&lt;epno[^&gt;]*&gt;s(\d+)&lt;/epno&gt;</expression>
      </RegExp>
      <RegExp input="$$9" output="\1" dest="19">
        <expression clear="yes">(\d+)-\d+</expression>
      </RegExp>
      <RegExp input="$$9" output="\1" dest="18">
        <expression clear="yes">\d+-(\d+)</expression>
      </RegExp>
      <RegExp input="$$19" output="&lt;season&gt;$$19&lt;/season&gt;&lt;episode&gt;$$18&lt;/episode&gt;" dest="4+">
        <expression/>
      </RegExp>
      <RegExp conditional="SpecialsAtEnd" input="$$19" output="&lt;displayseason&gt;2&lt;/displayseason&gt;&lt;displayepisode&gt;$$18&lt;/displayepisode&gt;" dest="4+">
        <expression>0</expression>
      </RegExp>
      <RegExp conditional="!SpecialsAtEnd" input="$$19" output="&lt;displayseason&gt;0&lt;/displayseason&gt;&lt;displayepisode&gt;$$18&lt;/displayepisode&gt;" dest="4+">
        <expression>0</expression>
      </RegExp>
      <RegExp input="$$5" output="&lt;runtime&gt;\1&lt;/runtime&gt;" dest="4+">
        <expression>(?i)&lt;length&gt;(\d+)&lt;/length&gt;</expression>
      </RegExp>
      <RegExp input="$$5" output="&lt;votes&gt;\1&lt;/votes&gt;&lt;rating&gt;\2&lt;/rating&gt;" dest="4+">
        <expression>(?i)&lt;rating.+?votes=&quot;([^&quot;]*)&quot;[^&gt;]*&gt;([^&lt;]+)&lt;/rating&gt;</expression>
      </RegExp> 
      <RegExp input="$$5" output="&lt;aired&gt;\1&lt;/aired&gt;" dest="4+">
        <expression>(?i)&lt;airdate[^&gt;]*&gt;([^&lt;]+)&lt;/airdate&gt;</expression>
      </RegExp>
      <RegExp input="$$1" output="\1" dest="6">
        <expression clear="yes" noclean="1">(?i)&lt;characters&gt;(.*?)&lt;/characters&gt;</expression>
      </RegExp>
      <RegExp input="$$6" output="&lt;actor&gt;&lt;name&gt;\5&lt;/name&gt;&lt;role&gt;\2&lt;/role&gt;&lt;/actor&gt;" dest="7">
        <expression clear="yes" repeat="yes">(?i)&lt;character[^&gt;]*type=&quot;main character in&quot;[^&gt;]*&gt;\s*(?:&lt;([^&gt;\s]+)[^&gt;]*&gt;[^&lt;]*&lt;/\1&gt;\s*)*?&lt;name&gt;([^&lt;]*)&lt;/name&gt;\s*(?:&lt;([^&gt;\s]+)[^&gt;]*&gt;[^&lt;]*&lt;/\3&gt;\s*)*?&lt;episodes[^&lt;]*[&gt;,]$$3[&lt;,][^/]*/episodes&gt;\s*(?:&lt;([^&gt;\s]+)[^&gt;]*&gt;[^&lt;]*&lt;/\4&gt;\s*)*?&lt;seiyuu[^&gt;]*&gt;([^&lt;]*)&lt;/seiyuu&gt;\s*(?:&lt;([^&gt;\s]+)[^&gt;]*&gt;[^&lt;]*&lt;/\6&gt;\s*)*?&lt;/character&gt;</expression>
      </RegExp>
      <RegExp conditional="!OnlyMainCast" input="$$6" output="&lt;actor&gt;&lt;name&gt;\5&lt;/name&gt;&lt;role&gt;\2&lt;/role&gt;&lt;/actor&gt;" dest="7+">
        <expression repeat="yes">(?i)&lt;character[^&gt;]*type=&quot;secondary cast in&quot;[^&gt;]*&gt;\s*(?:&lt;([^&gt;\s]+)[^&gt;]*&gt;[^&lt;]*&lt;/\1&gt;\s*)*?&lt;name&gt;([^&lt;]*)&lt;/name&gt;\s*(?:&lt;([^&gt;\s]+)[^&gt;]*&gt;[^&lt;]*&lt;/\3&gt;\s*)*?&lt;episodes[^&lt;]*[&gt;,]$$3[&lt;,][^/]*/episodes&gt;\s*(?:&lt;([^&gt;\s]+)[^&gt;]*&gt;[^&lt;]*&lt;/\4&gt;\s*)*?&lt;seiyuu[^&gt;]*&gt;([^&lt;]*)&lt;/seiyuu&gt;\s*(?:&lt;([^&gt;\s]+)[^&gt;]*&gt;[^&lt;]*&lt;/\6&gt;\s*)*?&lt;/character&gt;</expression>
      </RegExp>
      <RegExp input="$$7" output="\1" dest="4+">
        <RegExp input="$$7" output="'\1" dest="7">
          <expression clear="yes" repeat="yes" noclean="1">`?([^`]+)</expression>
        </RegExp>
        <expression noclean="1">'(.*)</expression>
      </RegExp>
      <RegExp input="$$1" output="\1" dest="6">
        <expression clear="yes" noclean="1">(?i)&lt;creators&gt;(.*?)&lt;/creators&gt;</expression>
      </RegExp>
      <RegExp input="$$6" output="&lt;credits&gt;\1&lt;/credits&gt;" dest="4+">
        <expression repeat="yes">(?i)&lt;name.*?type=&quot;(?:Original|Character)[^&gt;]*&gt;([^&lt;]*)&lt;/name&gt;</expression>
      </RegExp>
      <RegExp input="$$6" output="&lt;director&gt;\1&lt;/director&gt;" dest="4+">
        <expression repeat="yes">(?i)&lt;name.*?type=&quot;Direction&quot;&gt;([^&lt;]*)&lt;/name&gt;</expression>
      </RegExp>
      <RegExp input="$$1" output="\1" dest="20">
        <expression clear="yes">(?i)&lt;anime id=&quot;(\d+)&quot;</expression>
      </RegExp>
      <RegExp conditional="PersonalAnimeMapping" input="" output="&lt;url function=&quot;GetPersonalAnimeMapping&quot; cache=&quot;pers-anime-list.xml&quot;&gt;$INFO[PersonalAnimeMappingUrl]&lt;/url&gt;" dest="4+">
        <expression/>
      </RegExp>
      <RegExp input="" output="&lt;url function=&quot;GetEpisodeMappingXMLAPI&quot; cache=&quot;anime-list.xml&quot;&gt;$INFO[AnimeMappingUrl]&lt;/url&gt;" dest="4+">
        <expression/>
      </RegExp>
      <RegExp input="" output="" dest="1">
        <expression clear="yes"/>
      </RegExp>
      <RegExp input="" output="" dest="2">
        <expression clear="yes"/>
      </RegExp>
      <expression noclean="1"/>
    </RegExp>   
  </GetEpisodeDetails>

  <!--
    Persistent variables:
    $$20 ... AniDB anime id
    $$19 ... AniDB season number
    $$18 ... AniDB episode number
    $$17 ... TheTvDb anime id
    $$16 ... TheTvDb season number 
    $$15 ... TheTvDb episode number
    $$14 ... Explicit sort order from mapping (true/false)
    $$13 ... TheTvDb secondary episode number 
  -->

  <GetEpisodeMappingXMLAPI clearbuffers="no" dest="4">
    <RegExp input="$$4" output="&lt;details&gt;\1&lt;/details&gt;" dest="4">
      <RegExp input="$$2$$1" output="\1" dest="6">
        <expression clear="yes" noclean="1">(?i)(&lt;anime\s+anidbid=&quot;$$20&quot;.*?&lt;/anime&gt;)</expression>
      </RegExp>
      <RegExp input="$$6" output="\1" dest="7">
        <expression clear="yes" noclean="1">(?i)(&lt;supplemental-episode-info\s+episode=&quot;$$18&quot;\s*&gt;.*?&lt;/supplemental-episode-info&gt;)</expression>
      </RegExp>
      <RegExp input="$$7" output="\1" dest="4">
        <expression clear="yes" repeat="yes" noclean="1">(?i)(&lt;(title|runtime|aired|credits|director|plot|thumb)[^&gt;]*&gt;.*?&lt;/\2&gt;)</expression>
      </RegExp>
      <RegExp input="$$6" output="\1" dest="7">
        <expression clear="yes" noclean="1">(?i)(&lt;supplemental-episode-info\s+episode=&quot;all&quot;\s*&gt;.*?&lt;/supplemental-episode-info&gt;)</expression>
      </RegExp>
      <RegExp input="$$7" output="\1" dest="4+">
        <expression repeat="yes" noclean="1">(?i)(&lt;(title|runtime|aired|credits|director|plot|thumb)[^&gt;]*&gt;.*?&lt;/\2&gt;)</expression>
      </RegExp>
      <RegExp conditional="ExtraDetails" input="$$17" output="&lt;url function=&quot;GetEpisodeExtraDetailsDataAPI&quot; cache=&quot;tvdb-$$20.xml&quot;&gt;https://www.thetvdb.com/api/1D62F2F90030C444/series/\1/all/en.zip&lt;/url&gt;" dest="4+">
        <RegExp input="$$6" output="\1" dest="17">
          <expression clear="yes">(?i)tvdbid=&quot;([^&quot;]*)&quot;</expression>
        </RegExp>
        <RegExp input="$$6" output="\1" dest="16">
          <expression clear="yes">(?i)defaulttvdbseason=&quot;(\d+)&quot;</expression>
        </RegExp>
        <RegExp input="~$$19~" output="\1" dest="16">
          <expression>~(0)~</expression>
        </RegExp>
        <RegExp input="$$6" output="\1" dest="16">
          <expression>(?i)&lt;mapping\s+anidbseason=&quot;$$19&quot;\s+tvdbseason=&quot;(\d+)&quot;\s*&gt;[^&lt;]*;$$18-\d+(?:\+\d+)?;[^&lt;]*&lt;/mapping&gt;</expression>
        </RegExp>
        <RegExp input="$$18" output="\1" dest="15">
          <expression clear="yes">(\d+)</expression>
        </RegExp>
        <RegExp input="$$6" output="\1" dest="15">
          <expression>(?i)&lt;mapping\s+anidbseason=&quot;$$19&quot;\s+tvdbseason=&quot;\d+&quot;\s*&gt;[^&lt;]*;$$18-(\d+)(?:\+\d+)?;[^&lt;]*&lt;/mapping&gt;</expression>
        </RegExp>
        <RegExp input="$$6" output="\1" dest="13">
          <expression clear="yes">(?i)&lt;mapping\s+anidbseason=&quot;$$19&quot;\s+tvdbseason=&quot;\d+&quot;\s*&gt;[^&lt;]*;$$18-\d+\+(\d+);[^&lt;]*&lt;/mapping&gt;</expression>
        </RegExp>
        <expression>(\d+)</expression>
      </RegExp>
      <RegExp input="false" output="\1" dest="14">
        <expression/>
      </RegExp>
      <RegExp conditional="SpecialsInside" input="$$8" output="&lt;displayseason&gt;1&lt;/displayseason&gt;&lt;displayepisode&gt;\1&lt;/displayepisode&gt;" dest="4+">
        <RegExp input="$$6" output="\1" dest="7">
          <expression clear="yes" noclean="1">(?i)(&lt;before&gt;.*?&lt;/before&gt;)</expression>
        </RegExp>
        <RegExp input="$$19-$$7" output="\1" dest="8">
          <expression clear="yes">(?i)0-&lt;before&gt;[^&lt;]*;$$18-(\d+);[^&lt;]*&lt;/before&gt;</expression>
        </RegExp>
        <RegExp input="$$8" output="true" dest="14">
          <expression>\d+</expression>
        </RegExp>
        <expression>(\d+)</expression>
      </RegExp>
      <RegExp input="" output="" dest="1">
        <expression clear="yes"/>
      </RegExp>
      <expression noclean="1"/>
    </RegExp>
  </GetEpisodeMappingXMLAPI>
  
  <GetEpisodeReverseMappingXMLAPI clearbuffers="no" dest="4">
    <RegExp input="$$4" output="&lt;details&gt;\1&lt;/details&gt;" dest="4">
      <RegExp input="$$2$$1" output="\1" dest="6">
        <expression clear="yes" noclean="1">(?i)(&lt;anime\s+anidbid=&quot;$$20&quot;.*?&lt;/anime&gt;)</expression>
      </RegExp>
      <RegExp input="$$6" output="1" dest="19">
        <expression clear="yes">(?i)defaulttvdbseason=&quot;$$16&quot;</expression>
      </RegExp>
      <RegExp input="$$6" output="\1" dest="19">
        <expression>(?i)&lt;mapping\s+anidbseason=&quot;(\d+)&quot;\s+tvdbseason=&quot;$$16&quot;\s*&gt;[^&lt;]*;\d+-$$15(?:\+\d+)?;[^&lt;]*&lt;/mapping&gt;</expression>
      </RegExp>
      <RegExp input="$$15" output="\1" dest="18">
        <expression clear="yes">(\d+)</expression>
      </RegExp>
      <RegExp input="$$6" output="\1" dest="18">
        <expression>(?i)&lt;mapping\s+anidbseason=&quot;\d+&quot;\s+tvdbseason=&quot;$$16&quot;\s*&gt;[^&lt;]*;(\d+)-$$15(?:\+\d+)?;[^&lt;]*&lt;/mapping&gt;</expression>
      </RegExp>
      <RegExp input="$$19-$$18" output="&lt;displayseason&gt;1&lt;/displayseason&gt;&lt;displayepisode&gt;\1&lt;/displayepisode&gt;" dest="4">
        <expression clear="yes">1-(\d+)</expression>
      </RegExp>
      <RegExp input="" output="" dest="1">
        <expression clear="yes"/>
      </RegExp>
      <expression noclean="1"/>   
    </RegExp> 
  </GetEpisodeReverseMappingXMLAPI>
  
  <GetEpisodeExtraDetailsDataAPI clearbuffers="no" dest="4">
    <RegExp input="$$4" output="&lt;details&gt;\1&lt;/details&gt;" dest="4">
      <RegExp input="$$1" output="\1" dest="5">
        <expression clear="yes" noclean="1">(?i)(&lt;episode&gt;\s*(?:&lt;([^&gt;]+)&gt;[^&lt;]*&lt;/\2&gt;\s*)*?&lt;episodename&gt;[^&lt;]+&lt;/episodename&gt;\s*(?:&lt;([^&gt;]+)&gt;[^&lt;]*&lt;/\3&gt;\s*)*?&lt;episodenumber&gt;$$15&lt;/episodenumber&gt;\s*(?:&lt;([^&gt;]+)&gt;[^&lt;]*&lt;/\4&gt;\s*)*?&lt;seasonnumber&gt;$$16&lt;/seasonnumber&gt;\s*(?:&lt;([^&gt;]+)&gt;[^&lt;]*&lt;/\5&gt;\s*)*?&lt;/episode&gt;)</expression>
      </RegExp>
      <RegExp input="$$1" output="\1" dest="6">
        <expression clear="yes" noclean="1">(?i)(&lt;episode&gt;\s*(?:&lt;([^&gt;]+)&gt;[^&lt;]*&lt;/\2&gt;\s*)*?&lt;episodename&gt;[^&lt;]+&lt;/episodename&gt;\s*(?:&lt;([^&gt;]+)&gt;[^&lt;]*&lt;/\3&gt;\s*)*?&lt;episodenumber&gt;$$13&lt;/episodenumber&gt;\s*(?:&lt;([^&gt;]+)&gt;[^&lt;]*&lt;/\4&gt;\s*)*?&lt;seasonnumber&gt;$$16&lt;/seasonnumber&gt;\s*(?:&lt;([^&gt;]+)&gt;[^&lt;]*&lt;/\5&gt;\s*)*?&lt;/episode&gt;)</expression>
      </RegExp>
      <RegExp input="$$5" output="&lt;thumb&gt;https://www.thetvdb.com/banners/\1&lt;/thumb&gt;" dest="4">
        <expression clear="yes">(?i)&lt;filename&gt;([^&lt;]+)&lt;/filename&gt;</expression>
      </RegExp>
      <RegExp input="$$13-$$6" output="&lt;thumb&gt;https://www.thetvdb.com/banners/\1&lt;/thumb&gt;" dest="4+">
        <expression>(?i)\d+-.*?&lt;filename&gt;([^&lt;]+)&lt;/filename&gt;</expression>
      </RegExp>
      <RegExp input="$$5" output="\1" dest="7">
        <expression clear="yes">(?i)&lt;overview&gt;([^&lt;]+)&lt;/overview&gt;</expression>
      </RegExp>
      <RegExp input="$$13-$$6" output="\n\n\1" dest="7+">
        <expression>(?i)\d+-.*?&lt;overview&gt;([^&lt;]+)&lt;/overview&gt;</expression>
      </RegExp>
      <RegExp input="$$7" output="&lt;plot&gt;\1&lt;/plot&gt;" dest="4+">
        <expression>(.+)</expression>
      </RegExp>
      <RegExp conditional="SpecialsInside" input="$$6" output="\1" dest="4+">
        <RegExp input="$$5" output="\1" dest="16">
          <expression clear="yes">(?i)&lt;airsbefore_season&gt;(\d+)&lt;/airsbefore_season&gt;</expression>
        </RegExp>
        <RegExp input="$$5" output="\1" dest="15">
          <expression clear="yes">(?i)&lt;airsbefore_episode&gt;(\d+)&lt;/airsbefore_episode&gt;</expression>
        </RegExp>
        <RegExp input="" output="" dest="6">
          <expression clear="yes"/>
        </RegExp>
        <RegExp conditional="PersonalAnimeMapping" input="$$14-$$19-$$15-$$16" output="&lt;url function=&quot;GetPersonalAnimeMapping&quot; cache=&quot;pers-anime-list.xml&quot;&gt;$INFO[PersonalAnimeMappingUrl]&lt;/url&gt;" dest="6+">
          <expression>false-0-\d+-\d+</expression>
        </RegExp>
        <RegExp input="$$14-$$19-$$15-$$16" output="&lt;url function=&quot;GetEpisodeReverseMappingXMLAPI&quot; cache=&quot;anime-list.xml&quot;&gt;$INFO[AnimeMappingUrl]&lt;/url&gt;" dest="6+">
          <expression>false-0-\d+-\d+</expression>
        </RegExp>
        <expression noclean="1"/>   
      </RegExp>
      <RegExp input="" output="" dest="1">
        <expression clear="yes"/>
      </RegExp>
      <RegExp input="" output="" dest="2">
        <expression clear="yes"/>
      </RegExp>
      <expression noclean="1"/>   
    </RegExp> 
  </GetEpisodeExtraDetailsDataAPI>
  
</scraper>
